// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                             String        @id @default(cuid())
  email                          String        @unique
  name                           String
  createdAt                      DateTime      @default(now())
  lastLogin                      DateTime      @updatedAt
  isAdmin                        Boolean       @default(false)
  isRnDTeam                      Boolean       @default(false)
  canAccessAppsTdsHLD            Boolean       @default(false)
  canAccessAppsTdsLLD            Boolean       @default(false)
  canAccessAppsTdsArcGIS         Boolean       @default(false)
  canAccessAppsTdsOverride       Boolean       @default(false)
  canAccessAppsTdsAdmin          Boolean       @default(false)
  canAccessAppsTdsSuper          Boolean       @default(false)
  canAccessAppsCogecoHLD         Boolean       @default(false)
  canAccessAppsVistabeamHLD      Boolean       @default(false)
  canAccessAppsVistabeamOverride Boolean       @default(false)
  canAccessAppsVistabeamSuper    Boolean       @default(false)
  canAccessAppsXploreAdmin       Boolean       @default(false)
  canAccessAppsTelusAdmin        Boolean       @default(false)
  canAccessBugReportBoard        Boolean       @default(true)
  canAccessRoadmapBoard          Boolean       @default(false)
  canAccessReports               Boolean       @default(false)
  canDeleteReports               Boolean       @default(false)
  canAccessRnd                   Boolean       @default(false)
  canAccessDocsTDS               Boolean       @default(false)
  canAccessDocsCogeco            Boolean       @default(false)
  canAccessDocsVistabeam         Boolean       @default(false)
  canAccessDocsXplore            Boolean       @default(false)
  canAccessDocsComcast           Boolean       @default(false)
  canAccessDocsAdmin             Boolean       @default(false)
  canAccessDocsKC                Boolean       @default(false)
  canAccessDocsKCSecure          Boolean       @default(false)
  canAccessVideoAdmin            Boolean       @default(true)
  canAccessVideoGIS              Boolean       @default(true)
  canAccessVideoCAD              Boolean       @default(true)
  canAccessVideoLiDAR            Boolean       @default(true)
  canAccessVideoEng              Boolean       @default(true)
  canAccessVideoSttar            Boolean       @default(false)
  rndTasks                       RnDTeamTask[]
}

model TowerReport {
  id                String                    @id @default(cuid())
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt
  front_image       TowerReportImage[]        @relation("FrontImage")
  site_images       TowerReportImage[]        @relation("SiteImages")
  deficiency_images TowerReportImage[]        @relation("DeficiencyImages")
  jde_work_order    String
  jde_job           String
  site_name         String
  site_code         String
  site_region       String
  tower_id          String
  tower_name        String
  tower_site_name   String
  job_description   String
  job_revision      String
  design_standard   String
  client_name       String
  client_company    String
  assigned_peng     String
  redline_pages     Int                       @default(0)
  antenna_inventory AntennaTransmissionLine[] @relation("AntennaTransmissionLine")
  checklistForm4    ChecklistRow[]            @relation("ChecklistForm4Rows")
  checklistForm5    ChecklistRow[]            @relation("ChecklistForm5Rows")
  checklistForm6    ChecklistRow[]            @relation("ChecklistForm6Rows")
  checklistForm7    ChecklistRow[]            @relation("ChecklistForm7Rows")
  checklistForm8    ChecklistRow[]            @relation("ChecklistForm8Rows")
  checklistForm9    ChecklistRow[]            @relation("ChecklistForm9Rows")
  checklistForm10   ChecklistRow[]            @relation("ChecklistForm10Rows")
  checklistForm11   ChecklistRow[]            @relation("ChecklistForm11Rows")
  notes_antenna     Note[]                    @relation("AntennaNotes")
  notes_deficiency  Note[]                    @relation("DeficiencyNotes")
}

model TowerReportImage {
  id                         String       @id @default(cuid())
  url                        String
  label                      String
  deficiency_check_procedure String
  deficiency_recommendation  String
  imgIndex                   Int
  azureId                    String
  siteProjectId              String?
  frontProjectId             String?
  deficiencyProjectId        String?
  siteProject                TowerReport? @relation(fields: [siteProjectId], references: [id], name: "SiteImages", map: "SiteImages_projectId_fkey")
  frontProject               TowerReport? @relation(fields: [frontProjectId], references: [id], name: "FrontImage", map: "FrontImage_projectId_fkey")
  deficiencyProject          TowerReport? @relation(fields: [deficiencyProjectId], references: [id], name: "DeficiencyImages", map: "DeficiencyImages_projectId_fkey")
}

model AntennaTransmissionLine {
  id            String      @id @default(cuid())
  elevation     String
  quantity      String
  equipment     String
  azimuth       String
  tx_line       String
  odu           String
  carrier       String
  projectId     String
  reportProject TowerReport @relation(fields: [projectId], references: [id], name: "AntennaTransmissionLine", map: "AntennaTransmissionLine_projectId_fkey")
}

model ChecklistRow {
  id        String       @id @default(cuid())
  code      String
  isChecked Boolean?
  comments  String?
  form4Id   String?
  form5Id   String?
  form6Id   String?
  form7Id   String?
  form8Id   String?
  form9Id   String?
  form10Id  String?
  form11Id  String?
  form4     TowerReport? @relation(fields: [form4Id], references: [id], name: "ChecklistForm4Rows", map: "ChecklistForm4Rows_form4Id_fkey")
  form5     TowerReport? @relation(fields: [form5Id], references: [id], name: "ChecklistForm5Rows", map: "ChecklistForm5Rows_form5Id_fkey")
  form6     TowerReport? @relation(fields: [form6Id], references: [id], name: "ChecklistForm6Rows", map: "ChecklistForm6Rows_form6Id_fkey")
  form7     TowerReport? @relation(fields: [form7Id], references: [id], name: "ChecklistForm7Rows", map: "ChecklistForm7Rows_form7Id_fkey")
  form8     TowerReport? @relation(fields: [form8Id], references: [id], name: "ChecklistForm8Rows", map: "ChecklistForm8Rows_form8Id_fkey")
  form9     TowerReport? @relation(fields: [form9Id], references: [id], name: "ChecklistForm9Rows", map: "ChecklistForm9Rows_form9Id_fkey")
  form10    TowerReport? @relation(fields: [form10Id], references: [id], name: "ChecklistForm10Rows", map: "ChecklistForm10Rows_form10Id_fkey")
  form11    TowerReport? @relation(fields: [form11Id], references: [id], name: "ChecklistForm11Rows", map: "ChecklistForm11Rows_form11Id_fkey")
}

model RnDTeamTask {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now())
  ownerId        String?
  owner          User?     @relation(fields: [ownerId], references: [id])
  task           String
  priority       Int
  impactedPeople String
  comment        String?
  status         Status    @default(CREATED)
  dueDate        DateTime?
  startedAt      DateTime?
  completedAt    DateTime?
}

enum Status {
  CREATED
  PENDING
  NEXT_UP
  IN_PROGRESS
  BLOCKED
  COMPLETED
  CANCELLED
}

model BugReport {
  id            String      @id @default(cuid())
  title         String
  description   String
  createdDate   DateTime    @default(now())
  createdBy     String
  assignedTo    String?
  priority      BugPriority @default(LOW)
  status        BugStatus   @default(OPEN)
  assignedDate  DateTime?
  completedDate DateTime?
  comments      String?
}

enum BugStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  CLOSED
}

enum BugPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

model Note {
  id                      String       @id @default(cuid())
  indexNumber             Int
  comment                 String
  towerReportAntennaId    String?
  towerReportDeficiencyId String?
  towerReportAntenna      TowerReport? @relation(fields: [towerReportAntennaId], references: [id], name: "AntennaNotes", map: "AntennaNotes_towerReportAntennaId_fkey")
  towerReportDeficiency   TowerReport? @relation(fields: [towerReportDeficiencyId], references: [id], name: "DeficiencyNotes", map: "DeficiencyNotes_towerReportDeficiencyId_fkey")
}

model RoadmapCard {
  id          String   @id @default(cuid())
  title       String
  description String
  color       String
  position    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
