// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                             String   @id @default(cuid())
  email                          String   @unique
  name                           String
  createdAt                      DateTime @default(now())
  lastLogin                      DateTime @updatedAt
  isAdmin                        Boolean  @default(false)
  canAccessAppsTdsHLD            Boolean  @default(false)
  canAccessAppsTdsLLD            Boolean  @default(false)
  canAccessAppsTdsArcGIS         Boolean  @default(false)
  canAccessAppsTdsOverride       Boolean  @default(false)
  canAccessAppsTdsAdmin          Boolean  @default(false)
  canAccessAppsTdsSuper          Boolean  @default(false)
  canAccessAppsCogecoHLD         Boolean  @default(false)
  canAccessAppsVistabeamHLD      Boolean  @default(false)
  canAccessAppsVistabeamOverride Boolean  @default(false)
  canAccessAppsVistabeamSuper    Boolean  @default(false)
  canAccessAppsXploreAdmin       Boolean  @default(false)
  canAccessBoards                Boolean  @default(false)
  canAccessRnd                   Boolean  @default(false)
  canAccessDocsTDS               Boolean  @default(false)
  canAccessDocsCogeco            Boolean  @default(false)
  canAccessDocsVistabeam         Boolean  @default(false)
  canAccessDocsXplore            Boolean  @default(false)
  canAccessVideoDefault          Boolean  @default(false)
  canAccessVideoQGIS             Boolean  @default(false)
  canAccessVideoSttar            Boolean  @default(false)
}

model TowerReport {
  id                String             @id @default(cuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  front_image       TowerReportImage[] @relation("FrontImage")
  site_images       TowerReportImage[] @relation("SiteImages")
  deficiency_images TowerReportImage[] @relation("DeficiencyImages")
  jde_work_order    String
  jde_job           String
  site_name         String
  site_code         String
  site_region       String
  tower_id          String
  tower_name        String
  tower_site_name   String
  job_description   String
  job_revision      String
  design_standard   String
  client_name       String
  client_company    String
}

model TowerReportImage {
  id                  String       @id @default(cuid())
  url                 String
  label               String
  imgIndex            Int
  azureId             String
  siteProjectId       String?
  frontProjectId      String?
  deficiencyProjectId String?
  siteProject         TowerReport? @relation(fields: [siteProjectId], references: [id], name: "SiteImages", map: "SiteImages_projectId_fkey")
  frontProject        TowerReport? @relation(fields: [frontProjectId], references: [id], name: "FrontImage", map: "FrontImage_projectId_fkey")
  deficiencyProject   TowerReport? @relation(fields: [deficiencyProjectId], references: [id], name: "DeficiencyImages", map: "DeficiencyImages_projectId_fkey")
}
